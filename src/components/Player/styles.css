.root {
  height: 100%;
  background-color: transparent;
  color: white;
  font-family: ABCSans;
  contain: strict;
}

@media only screen and (-webkit-min-device-pixel-ratio: 1.3),
  only screen and (-o-min-device-pixel-ratio: 13/10),
  only screen and (min-resolution: 120dpi) {
  .root {
    font-weight: 300;
  }
}

@keyframes down {
  from {
    transform: translate(0, -100%);
  }
  to {
    transform: none;
  }
}

.section {
  z-index: 1;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  animation: down 1s 0.25s backwards;
}

.section::before {
  content: '';
  opacity: 0.6;
  z-index: -1;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 5rem;
  background: linear-gradient(to bottom, rgba(0, 0, 0, 1) 0%, rgba(0, 0, 0, 0) 100%);
  pointer-events: none;
}

.sectionTitle {
  margin: 0;
  padding: 1rem 2.75rem 0 1rem;
  min-height: 4rem;
  color: inherit;
  font-size: 1.375rem;
  font-weight: normal;
  line-height: 1.25;
  text-transform: none;
}

@media only screen and (-webkit-min-device-pixel-ratio: 1.3),
  only screen and (-o-min-device-pixel-ratio: 13/10),
  only screen and (min-resolution: 120dpi) {
  .sectionTitle {
    font-weight: 300;
  }
}

@media (max-width: 30rem) {
  .isLong {
    font-size: 1rem;
  }
}

.sectionTitleLeave {
  opacity: 1;
  transform: none;
}

.sectionTitleLeaveActive {
  opacity: 0;
  transform: translate(0, -6rem);
  transition: opacity 0.5s, transform 1s;
}

.sectionTitleEnter {
  opacity: 0;
  transform: translate(0, -6rem);
}

.sectionTitleEnterActive {
  opacity: 1;
  transform: none;
  transition: opacity 0.5s 0.5s, transform 1s;
}

.section > * > :first-child:not(:nth-last-child(2)):not(:last-child) > *,
.section > * > :first-child:not(:nth-last-child(2)):not(:last-child) ~ * > * {
  opacity: 0 !important;
  transform: translate(0, -6rem) !important;
  transition: none !important;
}

.section > * > :first-child:not(:nth-last-child(2)):not(:last-child) ~ :last-child > * {
  opacity: 1 !important;
  transform: none !important;
}

@keyframes appear {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.main {
  height: 100%;
  animation: appear 1s 1s backwards;
}

.main > *,
.entryContainer {
  height: 100%;
}

.entryContainerLeave {
  transform: none;
}

.entryContainerLeaveSection {
  opacity: 1;
}

.entryContainerLeaveActive {
  opacity: 0;
  transition: opacity 2s 2s;
}

.entryContainerLeaveActiveSection {
  transform: translate(-100%, 0);
  transition: transform 1s;
}

.entryContainerLeaveActiveSectionBackwards {
  transform: translate(100%, 0);
  transition: transform 1s;
}

.entryContainerEnter {
  opacity: 0;
}

.entryContainerEnterSection {
  transform: translate(100%, 0);
}

.entryContainerEnterSectionBackwards {
  transform: translate(-100%, 0);
}

.entryContainerEnterActive {
  opacity: 1;
  transition: opacity 2s;
}

.entryContainerEnterActiveSection {
  transform: none;
  transition: transform 1s;
}

.main > * > :first-child:not(:nth-last-child(2)):not(:last-child) > *,
.main > * > :first-child:not(:nth-last-child(2)):not(:last-child) ~ * > * {
  opacity: 1 !important;
  transform: none !important;
  transition: none !important;
}

@keyframes up {
  from {
    transform: translate(0, 100%);
  }
  to {
    transform: none;
  }
}

.controls {
  z-index: 1;
  position: absolute;
  right: 0;
  bottom: 0;
  left: 0;
  padding: 1rem 1rem 3.125rem;
  animation: up 1s 0.25s backwards;
}

.controls::before {
  content: '';
  opacity: 0.75;
  z-index: -1;
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 11.875rem;
  background: linear-gradient(to bottom, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 1) 40%);
  pointer-events: none;
}

.controls > * {
  margin-left: auto;
  margin-right: auto;
  max-width: 36rem;
}

.buttons {
  display: flex;
  justify-content: center;
}

.buttons > * {
  margin: 0 0.5rem;
}

@keyframes pulse {
  0%,
  100% {
    opacity: 1;
  }

  50% {
    opacity: 0.5;
  }
}

.buffering button[data-type='play'],
.buffering button[data-type='pause'] {
  animation: pulse 1s infinite;
}

.buttons > * > svg {
  /* See index.js for FLIP */
  transition: transform 1.25s 0.25s;
}

/* Safari removes padding from last flex child */
.controls::after {
  content: '';
  display: block;
  flex: 0 0 0.0625rem;
}
